<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.gbif.geocode.ws.model.TileMapper">

  <resultMap id="tileMap" type="org.gbif.geocode.ws.model.Tile">
    <result property="t" column="t" javaType="_byte[]" jdbcType="BINARY"/>
  </resultMap>

  <!-- Tiles from the public.political table -->
  <select id="tilePolitical" resultMap="tileMap">
    WITH overlappings AS (
      SELECT
        iso_a2 AS id,
        'Political' AS type,
        'http://www.naturalearthdata.com' AS source,
        name AS title,
        iso_a2 AS isoCountryCode2Digit,
        geom,
        centroid_geom
      FROM political
      WHERE geom &amp;&amp; ST_MakeBox2D(ST_Point(#{b1}, #{b2}), ST_Point(#{b3}, #{b4}))
    ), intersectings AS (
      SELECT * FROM overlappings
      WHERE ST_AsMVTGeom(geom,ST_MakeBox2D(ST_Point(#{b1}, #{b2}), ST_Point(#{b3}, #{b4})),4096,0,true) IS NOT NULL
    )
    SELECT ST_ASMVT(tile, 'political', 4096, 'mvtgeometry') AS t
    FROM (
      SELECT
        id, type, source, title, isoCountryCode2Digit,
        ST_AsMVTGeom(geom,ST_MakeBox2D(ST_Point(#{b1}, #{b2}), ST_Point(#{b3}, #{b4})),4096,0,true) AS mvtgeometry
      FROM intersectings
      UNION ALL
      SELECT
        id, type, source, title, isoCountryCode2Digit,
        ST_AsMVTGeom(centroid_geom,ST_MakeBox2D(ST_Point(#{b1}, #{b2}), ST_Point(#{b3}, #{b4})),4096,0,true) AS mvtgeometry
      FROM intersectings
    ) AS tile;
  </select>

  <!-- Tiles from the public.eez table -->
  <select id="tileEez" resultMap="tileMap">
    WITH overlappings AS (
      SELECT
        'http://marineregions.org/mrgid/' || eez.mrgid AS id,
        'EEZ' AS type,
        'http://marineregions.org' AS source,
        eez.geoname AS title,
        iso_map.iso2 AS isoCountryCode2Digit,
        geom,
        centroid_geom
      FROM eez
      LEFT OUTER JOIN iso_map ON eez.iso_ter1 = iso_map.iso3
      WHERE geom &amp;&amp; ST_MakeBox2D(ST_Point(#{b1}, #{b2}), ST_Point(#{b3}, #{b4}))
    ), intersectings AS (
      SELECT * FROM overlappings
      WHERE ST_AsMVTGeom(geom,ST_MakeBox2D(ST_Point(#{b1}, #{b2}), ST_Point(#{b3}, #{b4})),4096,0,true) IS NOT NULL
    )
    SELECT ST_ASMVT(tile, 'eez', 4096, 'mvtgeometry') AS t
    FROM (
      SELECT
        id, type, source, title, isoCountryCode2Digit,
        ST_AsMVTGeom(geom,ST_MakeBox2D(ST_Point(#{b1}, #{b2}), ST_Point(#{b3}, #{b4})),4096,0,true) AS mvtgeometry
      FROM intersectings
      UNION ALL
      SELECT
        id, type, source, title, isoCountryCode2Digit,
        ST_AsMVTGeom(centroid_geom,ST_MakeBox2D(ST_Point(#{b1}, #{b2}), ST_Point(#{b3}, #{b4})),4096,0,true) AS mvtgeometry
      FROM intersectings
    ) AS tile;
  </select>


  <insert id="toCache">
    INSERT INTO tile_cache (layer, z, x, y, tile, timeTaken) VALUES (#{layer}, #{z}, #{x}, #{y}, #{tile.t}, #{timeTaken});
  </insert>

  <select id="fromCache" resultMap="tileMap">
    SELECT tile AS t FROM tile_cache WHERE layer = #{layer} AND z = #{z} AND x = #{x} AND y = #{y} LIMIT 1;
  </select>

  <select id="svgPolitical" resultType="org.gbif.geocode.ws.model.SvgShape">
    SELECT iso_a2 AS id, ST_AsSVG(ST_SimplifyPreserveTopology(geom, 0.05)) AS shape FROM political
  </select>

  <select id="svgEez" resultType="org.gbif.geocode.ws.model.SvgShape">
    SELECT iso2 AS id, ST_AsSVG(ST_SimplifyPreserveTopology(geom, 0.05)) AS shape FROM eez LEFT OUTER JOIN iso_map ON eez.iso_ter1 = iso_map.iso3
  </select>
</mapper>
